[versions]
agp = "8.13.0-alpha04"
android-compileSdk = "36"
android-minSdk = "30"
android-targetSdk = "36"
androidx-appcompat = "1.7.1"
desugar_jdk_libs = "2.1.5"
kotlin = "2.2.10"
koin = "4.1.0"
ktor = "3.2.3"
sql-delight-version = "2.1.0"
coroutines-core = "1.10.2"
datetime = "0.7.1-0.6.x-compat"
napier = "2.7.1"
splash-screen = "1.2.0-rc01"
google-services = "4.4.3"
firebase-bom = "34.1.0"
crashlytics-gradle = "3.0.6"
lifecycle = "2.9.1"
navigation3 = "1.0.0-SNAPSHOT"
navigation3-viewmodel = "1.0.0-alpha04"
activity-compose = "1.12.0-alpha05"
compose-material3 = "1.5.0-SNAPSHOT"
compose-bom = "2025.08.00"
moko-resources = "0.25.0"
moko-permissions = "0.19.1"
paging = "3.4.0-alpha02"
material3-adaptive = "1.2.0-SNAPSHOT"
work = "2.10.3"
serialization = "1.9.0"
coil = "3.3.0"
performance-gradle = "2.0.1"
buildkonfig = "0.17.1"
google-auth = "21.4.0"
credential = "1.6.0-alpha05"
identity = "1.1.1"
certificate-transparency = "2.8.2"
datastore = "1.2.0-alpha02"
security-crypto = "1.1.0"
sqlcipher = "4.10.0"
playcore = "2.1.0"
play-services-ads = "24.5.0"
play-review = "2.0.2"
play-billing = "8.0.0"
protobufPlugin = "0.9.5"
protobuf = "4.31.1"
runtime = "1.9.0"
userMessagingPlatform = "3.2.0"
oss-licenses = "17.2.1"
oss-license-plugin = "0.10.7"
integrity = "1.4.0"

[libraries]

#COMPOSE
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-icons = { module = "androidx.compose.material:material-icons-extended" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "runtime" }

#TEST
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

#KOIN
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation" }

#KTOR
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

#SQLDELIGHT
sql-delight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sql-delight-version" }
sql-delight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sql-delight-version" }
sql-delight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sql-delight-version" }
sql-delight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sql-delight-version" }
sqldelight-dialect-sqlite = { group = "app.cash.sqldelight", name = "sqlite-3-25-dialect", version.ref = "sql-delight-version" }
sqldelight-extensions-paging3 = { group = "app.cash.sqldelight", name = "androidx-paging3-extensions", version.ref = "sql-delight-version" }

#FIREBASE
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-performance = { module = "com.google.firebase:firebase-perf" }
firebase-appcheck-playintegrity = { module = "com.google.firebase:firebase-appcheck-playintegrity" }
firebase-appcheck-debug = { module = "com.google.firebase:firebase-appcheck-debug" }
firebase-config = { module = "com.google.firebase:firebase-config" }

#KOTLIN
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines-core" }
kotlin-coroutines-play-services = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-play-services", version.ref = "coroutines-core" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serialization" }

#ADAPTIVE LAYOUT
androidx-compose-material3-adaptive = { module = "androidx.compose.material3.adaptive:adaptive", version.ref = "material3-adaptive" }
androidx-compose-material3-adaptive-layout = { module = "androidx.compose.material3.adaptive:adaptive-layout", version.ref = "material3-adaptive" }
androidx-compose-material3-adaptive-navigation = { module = "androidx.compose.material3.adaptive:adaptive-navigation", version.ref = "material3-adaptive" }
androidx-compose-material3-adaptive-navigation-suite = { module = "androidx.compose.material3:material3-adaptive-navigation-suite", version.ref = "compose-material3" }
androidx-compose-material3-adaptive-navigation3 = { module = "androidx.compose.material3.adaptive:adaptive-navigation3", version.ref = "navigation3" }
androidx-compose-material3-windowsizeclass = { group = "androidx.compose.material3", name = "material3-window-size-class-android", version.ref = "compose-material3" }

#ANDROIDX(outside BOM)
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-navigation = { module = "androidx.navigation3:navigation3-runtime", version.ref = "navigation3" }
androidx-navigation-ui = { module = "androidx.navigation3:navigation3-ui", version.ref = "navigation3" }
androidx-navigation-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-navigation3", version.ref = "navigation3-viewmodel" }
lifecycle-runtime = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "lifecycle" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splash-screen" }
androidx-work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "credential" }
androidx-credentials-compat = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credential" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "security-crypto" }
sqlcipher-android = { module = "net.zetetic:sqlcipher-android", version.ref = "sqlcipher" }

#PAGING3
paging = { module = "androidx.paging:paging-common", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging" }

#COIL
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }

#OTHER
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-permissions = { module = "dev.icerock.moko:permissions", version.ref = "moko-permissions" }
moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko-permissions" }
moko-permissions-notifications = { module = "dev.icerock.moko:permissions-notifications", version.ref = "moko-permissions" }
google-identity = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "identity" }
google-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "google-auth" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "play-services-ads" }
play-services-oss-licenses = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "oss-licenses" }
play-review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "play-review" }
play-billing = { module = "com.android.billingclient:billing-ktx", version.ref = "play-billing" }
certificate-transparency = { module = "com.appmattus.certificatetransparency:certificatetransparency-android", version.ref = "certificate-transparency" }
google-play-app-update = { module = "com.google.android.play:app-update", version.ref = "playcore" }
google-play-app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "playcore" }
desugar_jdk_libs-v215 = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
protobuf-kotlin-lite = { group = "com.google.protobuf", name = "protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { group = "com.google.protobuf", name = "protoc", version.ref = "protobuf" }
user-messaging-platform = { group = "com.google.android.ump", name = "user-messaging-platform", version.ref = "userMessagingPlatform" }
play-integrity = { group = "com.google.android.play", name = "integrity", version.ref = "integrity" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
googleServices = { id = "com.google.gms.google-services", version.ref = "google-services" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics-gradle" }
performance = { id = "com.google.firebase.firebase-perf", version.ref = "performance-gradle" }
sqlDelightGradlePlugin = { id = "app.cash.sqldelight", version.ref = "sql-delight-version" }
mokoMultiplatformResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufPlugin" }
ossLicenses = { id = "com.google.android.gms.oss-licenses-plugin", version.ref = "oss-license-plugin" }
